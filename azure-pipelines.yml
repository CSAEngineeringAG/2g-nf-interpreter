trigger:
  branches:
    include: ["master", "develop*", "release-*", "refs/tags/*" ]
  paths:
    exclude: [ "doc", "*.md", ".gitignore", "README.md" ]

# no pr config, we want to trigger builds for all PRs on all branches

# add nf-tools repo to resources (for Azure Pipelines templates)
pool:
    vmImage: 'VS2017-Win2016'

strategy:
  matrix:
      ST_STM32F769I_DISCOVERY:
        BoardName: ST_STM32F769I_DISCOVERY
        BuildOptions: -DTARGET_SERIES=STM32F7xx -DRTOS=CHIBIOS -DSUPPORT_ANY_BASE_CONVERSION=ON -DNF_FEATURE_DEBUGGER=ON -DSWO_OUTPUT=ON -DNF_FEATURE_RTC=ON -DNF_FEATURE_HAS_SDCARD=ON -DAPI_System.Math=ON -DAPI_Hardware.Stm32=ON -DNF_FEATURE_HAS_CONFIG_BLOCK=ON -DAPI_Windows.Devices.Gpio=ON -DAPI_Windows.Devices.Spi=ON -DAPI_Windows.Devices.I2c=ON -DAPI_Windows.Devices.Pwm=ON -DAPI_Windows.Devices.SerialCommunication=ON -DAPI_Windows.Devices.Adc=ON -DAPI_System.Devices.Dac=ON -DAPI_System.Net=ON -DNF_SECURITY_MBEDTLS=ON -DAPI_nanoFramework.Devices.OneWire=ON -DAPI_nanoFramework.Devices.Can=ON -DAPI_Windows.Storage=ON -DAPI_nanoFramework.ResourceManager=ON -DAPI_nanoFramework.System.Collections=ON -DAPI_nanoFramework.System.Text=ON
        GccArm_Version: 9-2020-q2-update
        NeedsDFU: false 



variables:
    GNU_GCC_TOOLCHAIN_PATH: $(Agent.TempDirectory)\GNU_Tools_ARM_Embedded

steps:
  - template: azure-pipelines-templates/download-install-arm-gcc-toolchain.yml
  - template: azure-pipelines-templates/download-install-ninja.yml

  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        mkdir build
        cd build
    displayName: All in one    
  - task: CMake@1
    inputs:
      cmakeArgs: '-S $(Build.SourcesDirectory) -B $(Build.SourcesDirectory)\build -C $(Build.SourcesDirectory)\jenkins-pipelines\CMake_initial_cache_cfg_M4MCU.cmake -DCMAKE_TOOLCHAIN_FILE=$(Build.SourcesDirectory)\CMake\toolchain.arm-none-eabi.cmake -DTOOLCHAIN_PREFIX=$(GNU_GCC_TOOLCHAIN_PATH) -G Ninja'
      runInsideShell: true
      workingDirectory: '$(Build.SourcesDirectory)\build'
    displayName: Configure CMake
  - task: CMake@1
    inputs:
      cmakeArgs: '--build $(Build.SourcesDirectory)\build --config MinSizeRel --target all -- -j 10'
      workingDirectory:  '$(Build.SourcesDirectory)'
    displayName: Build with CMake
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        cd $(Build.SourcesDirectory)/build
        Move-Item -Path .\*.hex -Destination $(Build.ArtifactStagingDirectory)
        Move-Item -Path .\*.bin -Destination $(Build.ArtifactStagingDirectory)
        Move-Item -Path .\*.elf -Destination $(Build.ArtifactStagingDirectory)
        Move-Item -Path .\*.lst -Destination $(Build.ArtifactStagingDirectory)
        Move-Item -Path .\*.map -Destination $(Build.ArtifactStagingDirectory)
        Move-Item -Path .\*.s19 -Destination $(Build.ArtifactStagingDirectory)
        cd $(Build.ArtifactStagingDirectory)
        ls
    displayName: Sort Artifacts
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'test'
      publishLocation: 'Container'
      #targetPath: # Required when publishLocation == FilePath
      #parallel: false # Optional
      #parallelCount: # Optional
      #fileCopyOptions: #Optional
    displayName: Publish Artifacts
