trigger:
  branches:
    include:
      - refs/tags/*

variables:
    GNU_GCC_TOOLCHAIN_PATH: $(Agent.TempDirectory)\GNU_Tools_ARM_Embedded
    SOURCE_DIR: $(Build.SourcesDirectory)\2g-nf-interpreter-csa
    BUILD_DIR: $(SOURCE_DIR)\build
    BRANCH: $(Build.SourceBranchName)

resources:
  repositories:
  - repository: self # The name used to reference this repository in the checkout step
    type: github
    endpoint: GitHub-SC
    name: CSAEngineeringAG/2g-nf-interpreter-csa
    ref: $(BRANCH)

  - repository: nF_Tools # The name used to reference this repository in the checkout step
    type: github
    endpoint: GitHub-SC
    name:  CSAEngineeringAG/2g-nf-toolchain

  - repository: targets_community # The name used to reference this repository in the checkout step
    type: github
    endpoint: GitHub-SC
    name:   nanoframework/nf-Community-Targets


pool:
    vmImage: 'VS2017-Win2016'

name: $(Build.DefinitionName)_$(Build.SourceBranchName)

strategy:
  matrix:
      2G_M4-MCU_v1:
        BoardName: 2G_M4-MCU_v1
        BuildOptions: -DUSE_M4MCU_V3=OFF
        GccArm_Version: 8_2019-q3-update
        NeedsDFU: false 

      2G_M4-MCU_v3:
        BoardName: 2G_M4-MCU_v3
        BuildOptions: -DUSE_M4MCU_V3=ON
        GccArm_Version: 8_2019-q3-update
        NeedsDFU: false 



steps:

  - checkout: self
    displayName: Get Source Files

  - checkout: targets_community
    path : s\2g-nf-interpreter-csa\targets_community
    displayName: Submodule targets_community

  - checkout: nF_Tools
    path: s\2g-nf-interpreter-csa\nF_Tools
    displayName: Submodule nF_Tools

  - script: echo "##vso[task.prependpath]$(SOURCE_DIR)\nF_Tools\GNU_ARM_Toolchain\$(GccArm_Version)\bin
    displayName: Tweak PATH with GNU ARM Toolchain

  - script: echo "##vso[task.prependpath]$(SOURCE_DIR)\nF_Tools\Ninja
    displayName: Tweak PATH with Ninja
  
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        cd $(SOURCE_DIR)
        mkdir build
    displayName: Create Build Directory

  - task: CMake@1
    inputs:
      cmakeArgs: '-S $(SOURCE_DIR) -B $(BUILD_DIR) -C $(SOURCE_DIR)\jenkins-pipelines\CMake_initial_cache_cfg_M4MCU.cmake $(BuildOptions) -DCMAKE_MAKE_PROGRAM=$(SOURCE_DIR)\nF_Tools\Ninja\ninja.exe -DCMAKE_TOOLCHAIN_FILE=$(SOURCE_DIR)\CMake\toolchain.arm-none-eabi.cmake -DTOOLCHAIN_PREFIX=$(SOURCE_DIR)\nF_Tools\GNU_ARM_Toolchain\8_2019-q3-update -G Ninja'
      workingDirectory: '$(BUILD_DIR)'
    displayName: Configure CMake

  - task: CMake@1
    inputs:
      cmakeArgs: '--build $(BUILD_DIR) --config MinSizeRel --target all -- -j 10'
      workingDirectory:  '$(BUILD_DIR)'
    displayName: Build with CMake

  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(SOURCE_DIR)/build'
      Contents: |
        *.hex
        *.bin
        *.elf
        *.lst
        *.map
        *.s19
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
    displayName: Sort Artifacts

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: $(BoardName)
      publishLocation: 'Container'
    displayName: Publish Artifacts
